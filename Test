import org.apache.hc.client5.http.impl.classic.CloseableHttpClient;
import org.apache.hc.client5.http.impl.classic.HttpClients;
import org.apache.hc.client5.http.ssl.TrustAllStrategy;
import org.apache.hc.core5.http.io.entity.StringEntity;
import org.apache.hc.core5.util.Timeout;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;
import javax.net.ssl.SSLContext;

public class SSLRestTemplate {

    public static RestTemplate getRestTemplate() throws Exception {
        // Create SSL context that trusts ALL certificates
        SSLContext sslContext = SSLContext.getInstance("TLS");
        sslContext.init(null, null, new java.security.SecureRandom());

        // Build HttpClient with custom SSL context
        CloseableHttpClient httpClient = HttpClients.custom()
                .setSSLContext(sslContext) // No more syntax errors
                .setSSLHostnameVerifier(new org.apache.hc.client5.http.ssl.NoopHostnameVerifier())
                .build();

        // Use custom HttpClient in RestTemplate
        HttpComponentsClientHttpRequestFactory factory = new HttpComponentsClientHttpRequestFactory(httpClient);
        factory.setConnectTimeout((int) Timeout.ofSeconds(30).toMilliseconds());
        factory.setReadTimeout((int) Timeout.ofSeconds(30).toMilliseconds());

        return new RestTemplate(factory);
    }
}
